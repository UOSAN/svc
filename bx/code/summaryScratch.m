for sCount = 1:25;

d = drs.sub.dsd{sCount};
sTot = sum(d.pickTarget=='self');
Sf = sum(d.pickTarget(d.dumpTarget=='friend')=='self');
Sp = sum(d.pickTarget(d.dumpTarget=='parent')=='self');
sEq = sum(d.pickTarget(d.pickValue==d.dumpValue)=='self');
sMore = sum(d.pickTarget(d.pickValue>d.dumpValue)=='self');
sLess = sum(d.pickTarget(d.pickValue<d.dumpValue)=='self');
fTot = sum(d.pickTarget=='friend');
Fs = sum(d.pickTarget(d.dumpTarget=='self')=='friend');
Fp = sum(d.pickTarget(d.dumpTarget=='parent')=='friend');
fEq = sum(d.pickTarget(d.pickValue==d.dumpValue)=='friend');
fMore = sum(d.pickTarget(d.pickValue>d.dumpValue)=='friend');
fLess = sum(d.pickTarget(d.pickValue<d.dumpValue)=='friend');
pTot = sum(d.pickTarget=='parent');
Ps = sum(d.pickTarget(d.dumpTarget=='self')=='parent');
Pf = sum(d.pickTarget(d.dumpTarget=='friend')=='parent');
pEq = sum(d.pickTarget(d.pickValue==d.dumpValue)=='parent');
pMore = sum(d.pickTarget(d.pickValue>d.dumpValue)=='parent');
pLess = sum(d.pickTarget(d.pickValue<d.dumpValue)=='parent');
freqs(sCount,:) = [sTot fTot pTot Sf Sp Fs Fp Ps Pf sEq fEq pEq];
aEq = nanmean(d.choiceRT(d.pickValue==d.dumpValue));
aMore = nanmean(d.choiceRT(d.pickValue>d.dumpValue));
aLess = nanmean(d.choiceRT(d.pickValue<d.dumpValue));
sTot = nanmean(d.choiceRT(d.pickTarget=='self'));
Sf = nanmean(d.choiceRT(d.pickTarget(d.dumpTarget=='friend')=='self'));
Sp = nanmean(d.choiceRT(d.pickTarget(d.dumpTarget=='parent')=='self'));
sEq = nanmean(d.choiceRT(d.pickTarget(d.pickValue==d.dumpValue)=='self'));
sMore = nanmean(d.choiceRT(d.pickTarget(d.pickValue>d.dumpValue)=='self'));
sLess = nanmean(d.choiceRT(d.pickTarget(d.pickValue<d.dumpValue)=='self'));
fTot = nanmean(d.choiceRT(d.pickTarget=='friend'));
Fs = nanmean(d.choiceRT(d.pickTarget(d.dumpTarget=='self')=='friend'));
Fp = nanmean(d.choiceRT(d.pickTarget(d.dumpTarget=='parent')=='friend'));
fEq = nanmean(d.choiceRT(d.pickTarget(d.pickValue==d.dumpValue)=='friend'));
fMore = nanmean(d.choiceRT(d.pickTarget(d.pickValue>d.dumpValue)=='friend'));
fLess = nanmean(d.choiceRT(d.pickTarget(d.pickValue<d.dumpValue)=='friend'));
pTot = nanmean(d.choiceRT(d.pickTarget=='parent'));
Ps = nanmean(d.choiceRT(d.pickTarget(d.dumpTarget=='self')=='parent'));
Pf = nanmean(d.choiceRT(d.pickTarget(d.dumpTarget=='friend')=='parent'));
pEq = nanmean(d.choiceRT(d.pickTarget(d.pickValue==d.dumpValue)=='parent'));
pMore = nanmean(d.choiceRT(d.pickTarget(d.pickValue>d.dumpValue)=='parent'));
pLess = nanmean(d.choiceRT(d.pickTarget(d.pickValue<d.dumpValue)=='parent'));
RTs(sCount,:) = [sTot fTot pTot Sf Sp Fs Fp Ps Pf sEq fEq pEq aEq aMore aLess];
end